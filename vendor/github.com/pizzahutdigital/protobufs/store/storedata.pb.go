// Code generated by protoc-gen-go. DO NOT EDIT.
// source: storedata.proto

/*
Package storedata is a generated protocol buffer package.

It is generated from these files:
	storedata.proto

It has these top-level messages:
	GetStoreByNumberReq
	GetStoreByNumberRes
	GetStoresNearReq
	GetStoresNearRes
	GetStoresReq
	GetStoresRes
	Store
	PromiseTime
	Day
	Occassion
	Hour
	DeliveryZone
	OutOfProduct
	OutOfProducts
	UpdatePromiseTimeReq
	UpdatePromiseTimeRes
	UpdateOutOfProductsReq
	UpdateOutOfProductsRes
	UpdateClosureReq
	UpdateClosureRes
	SimpleStore
*/
package storedata

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ReceiveType int32

const (
	ReceiveType_Carryout ReceiveType = 0
	ReceiveType_Delivery ReceiveType = 1
)

var ReceiveType_name = map[int32]string{
	0: "Carryout",
	1: "Delivery",
}
var ReceiveType_value = map[string]int32{
	"Carryout": 0,
	"Delivery": 1,
}

func (x ReceiveType) String() string {
	return proto.EnumName(ReceiveType_name, int32(x))
}
func (ReceiveType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// GetStoreByNumberReq message contains the possible parameters that can be passed to GetStoreByNumber.
type GetStoreByNumberReq struct {
	StoreNumber string `protobuf:"bytes,1,opt,name=storeNumber" json:"storeNumber,omitempty"`
}

func (m *GetStoreByNumberReq) Reset()                    { *m = GetStoreByNumberReq{} }
func (m *GetStoreByNumberReq) String() string            { return proto.CompactTextString(m) }
func (*GetStoreByNumberReq) ProtoMessage()               {}
func (*GetStoreByNumberReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetStoreByNumberReq) GetStoreNumber() string {
	if m != nil {
		return m.StoreNumber
	}
	return ""
}

// GetStoreByNumberRes message is the response from the GetStoreByNumber.
type GetStoreByNumberRes struct {
	Status      int64  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Store       *Store `protobuf:"bytes,3,opt,name=store" json:"store,omitempty"`
}

func (m *GetStoreByNumberRes) Reset()                    { *m = GetStoreByNumberRes{} }
func (m *GetStoreByNumberRes) String() string            { return proto.CompactTextString(m) }
func (*GetStoreByNumberRes) ProtoMessage()               {}
func (*GetStoreByNumberRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetStoreByNumberRes) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetStoreByNumberRes) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GetStoreByNumberRes) GetStore() *Store {
	if m != nil {
		return m.Store
	}
	return nil
}

// GetStoresNearReq message contains the possible parameters that can be passed to GetStoresNear.
type GetStoresNearReq struct {
	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
	Range     uint32  `protobuf:"varint,3,opt,name=range" json:"range,omitempty"`
	Zipcode   string  `protobuf:"bytes,4,opt,name=zipcode" json:"zipcode,omitempty"`
}

func (m *GetStoresNearReq) Reset()                    { *m = GetStoresNearReq{} }
func (m *GetStoresNearReq) String() string            { return proto.CompactTextString(m) }
func (*GetStoresNearReq) ProtoMessage()               {}
func (*GetStoresNearReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetStoresNearReq) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *GetStoresNearReq) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *GetStoresNearReq) GetRange() uint32 {
	if m != nil {
		return m.Range
	}
	return 0
}

func (m *GetStoresNearReq) GetZipcode() string {
	if m != nil {
		return m.Zipcode
	}
	return ""
}

// GetStoresNearRes message is the response from the GetStoresNear.
type GetStoresNearRes struct {
	Status      int64    `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Description string   `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Stores      []*Store `protobuf:"bytes,3,rep,name=stores" json:"stores,omitempty"`
}

func (m *GetStoresNearRes) Reset()                    { *m = GetStoresNearRes{} }
func (m *GetStoresNearRes) String() string            { return proto.CompactTextString(m) }
func (*GetStoresNearRes) ProtoMessage()               {}
func (*GetStoresNearRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetStoresNearRes) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetStoresNearRes) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GetStoresNearRes) GetStores() []*Store {
	if m != nil {
		return m.Stores
	}
	return nil
}

// GetStoresReq message contains the possible parameters that can be passed to GetStores.
type GetStoresReq struct {
}

func (m *GetStoresReq) Reset()                    { *m = GetStoresReq{} }
func (m *GetStoresReq) String() string            { return proto.CompactTextString(m) }
func (*GetStoresReq) ProtoMessage()               {}
func (*GetStoresReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

// GetStoresRes message is the response from GetStores.
type GetStoresRes struct {
	Status      int64          `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Description string         `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Stores      []*SimpleStore `protobuf:"bytes,3,rep,name=stores" json:"stores,omitempty"`
}

func (m *GetStoresRes) Reset()                    { *m = GetStoresRes{} }
func (m *GetStoresRes) String() string            { return proto.CompactTextString(m) }
func (*GetStoresRes) ProtoMessage()               {}
func (*GetStoresRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetStoresRes) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetStoresRes) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GetStoresRes) GetStores() []*SimpleStore {
	if m != nil {
		return m.Stores
	}
	return nil
}

// Store message is the structure of store data that will be returned.
type Store struct {
	StoreNumber             string         `protobuf:"bytes,1,opt,name=storeNumber" json:"storeNumber,omitempty"`
	Latitude                float64        `protobuf:"fixed64,2,opt,name=latitude" json:"latitude,omitempty"`
	Longitude               float64        `protobuf:"fixed64,3,opt,name=longitude" json:"longitude,omitempty"`
	BrandName               string         `protobuf:"bytes,4,opt,name=brandName" json:"brandName,omitempty"`
	Phi                     bool           `protobuf:"varint,5,opt,name=phi" json:"phi,omitempty"`
	AddressLine             string         `protobuf:"bytes,6,opt,name=addressLine" json:"addressLine,omitempty"`
	AddressLine2            string         `protobuf:"bytes,7,opt,name=addressLine2" json:"addressLine2,omitempty"`
	AddressLine3            string         `protobuf:"bytes,8,opt,name=addressLine3" json:"addressLine3,omitempty"`
	City                    string         `protobuf:"bytes,9,opt,name=city" json:"city,omitempty"`
	County                  string         `protobuf:"bytes,10,opt,name=county" json:"county,omitempty"`
	State                   string         `protobuf:"bytes,11,opt,name=state" json:"state,omitempty"`
	PostalCode              string         `protobuf:"bytes,12,opt,name=postalCode" json:"postalCode,omitempty"`
	CountryRegion           string         `protobuf:"bytes,13,opt,name=countryRegion" json:"countryRegion,omitempty"`
	BusinessPhone           string         `protobuf:"bytes,14,opt,name=businessPhone" json:"businessPhone,omitempty"`
	HomePhone               string         `protobuf:"bytes,15,opt,name=homePhone" json:"homePhone,omitempty"`
	FaxPhone                string         `protobuf:"bytes,16,opt,name=faxPhone" json:"faxPhone,omitempty"`
	CellPhone               string         `protobuf:"bytes,17,opt,name=cellPhone" json:"cellPhone,omitempty"`
	Pager                   string         `protobuf:"bytes,18,opt,name=pager" json:"pager,omitempty"`
	DriveThru               bool           `protobuf:"varint,19,opt,name=driveThru" json:"driveThru,omitempty"`
	DineIn                  bool           `protobuf:"varint,20,opt,name=dineIn" json:"dineIn,omitempty"`
	CarryOut                bool           `protobuf:"varint,21,opt,name=carryOut" json:"carryOut,omitempty"`
	Delivery                bool           `protobuf:"varint,22,opt,name=delivery" json:"delivery,omitempty"`
	OnlineOrdering          bool           `protobuf:"varint,23,opt,name=onlineOrdering" json:"onlineOrdering,omitempty"`
	WingStreet              bool           `protobuf:"varint,24,opt,name=wingStreet" json:"wingStreet,omitempty"`
	ItalianBistro           bool           `protobuf:"varint,25,opt,name=italianBistro" json:"italianBistro,omitempty"`
	Buffet                  bool           `protobuf:"varint,26,opt,name=buffet" json:"buffet,omitempty"`
	BuildingDesign          string         `protobuf:"bytes,27,opt,name=buildingDesign" json:"buildingDesign,omitempty"`
	InteriorSeats           uint64         `protobuf:"varint,28,opt,name=interiorSeats" json:"interiorSeats,omitempty"`
	TotalSeats              uint64         `protobuf:"varint,29,opt,name=totalSeats" json:"totalSeats,omitempty"`
	ParkingSpaces           uint64         `protobuf:"varint,30,opt,name=parkingSpaces" json:"parkingSpaces,omitempty"`
	OwnershipType           string         `protobuf:"bytes,31,opt,name=ownershipType" json:"ownershipType,omitempty"`
	MultibrandConfiguration string         `protobuf:"bytes,32,opt,name=multibrandConfiguration" json:"multibrandConfiguration,omitempty"`
	EntityId                string         `protobuf:"bytes,33,opt,name=entityId" json:"entityId,omitempty"`
	Distance                float64        `protobuf:"fixed64,34,opt,name=distance" json:"distance,omitempty"`
	OpenForCarryout         bool           `protobuf:"varint,35,opt,name=openForCarryout" json:"openForCarryout,omitempty"`
	OpenForDelivery         bool           `protobuf:"varint,36,opt,name=openForDelivery" json:"openForDelivery,omitempty"`
	PromiseTime             *PromiseTime   `protobuf:"bytes,37,opt,name=promiseTime" json:"promiseTime,omitempty"`
	StoreStatus             string         `protobuf:"bytes,38,opt,name=storeStatus" json:"storeStatus,omitempty"`
	ClosureReason           string         `protobuf:"bytes,39,opt,name=closureReason" json:"closureReason,omitempty"`
	OnlineStatus            string         `protobuf:"bytes,40,opt,name=onlineStatus" json:"onlineStatus,omitempty"`
	Days                    []*Day         `protobuf:"bytes,41,rep,name=days" json:"days,omitempty"`
	OutOfProducts           *OutOfProducts `protobuf:"bytes,42,opt,name=outOfProducts" json:"outOfProducts,omitempty"`
}

func (m *Store) Reset()                    { *m = Store{} }
func (m *Store) String() string            { return proto.CompactTextString(m) }
func (*Store) ProtoMessage()               {}
func (*Store) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Store) GetStoreNumber() string {
	if m != nil {
		return m.StoreNumber
	}
	return ""
}

func (m *Store) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Store) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Store) GetBrandName() string {
	if m != nil {
		return m.BrandName
	}
	return ""
}

func (m *Store) GetPhi() bool {
	if m != nil {
		return m.Phi
	}
	return false
}

func (m *Store) GetAddressLine() string {
	if m != nil {
		return m.AddressLine
	}
	return ""
}

func (m *Store) GetAddressLine2() string {
	if m != nil {
		return m.AddressLine2
	}
	return ""
}

func (m *Store) GetAddressLine3() string {
	if m != nil {
		return m.AddressLine3
	}
	return ""
}

func (m *Store) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Store) GetCounty() string {
	if m != nil {
		return m.County
	}
	return ""
}

func (m *Store) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Store) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Store) GetCountryRegion() string {
	if m != nil {
		return m.CountryRegion
	}
	return ""
}

func (m *Store) GetBusinessPhone() string {
	if m != nil {
		return m.BusinessPhone
	}
	return ""
}

func (m *Store) GetHomePhone() string {
	if m != nil {
		return m.HomePhone
	}
	return ""
}

func (m *Store) GetFaxPhone() string {
	if m != nil {
		return m.FaxPhone
	}
	return ""
}

func (m *Store) GetCellPhone() string {
	if m != nil {
		return m.CellPhone
	}
	return ""
}

func (m *Store) GetPager() string {
	if m != nil {
		return m.Pager
	}
	return ""
}

func (m *Store) GetDriveThru() bool {
	if m != nil {
		return m.DriveThru
	}
	return false
}

func (m *Store) GetDineIn() bool {
	if m != nil {
		return m.DineIn
	}
	return false
}

func (m *Store) GetCarryOut() bool {
	if m != nil {
		return m.CarryOut
	}
	return false
}

func (m *Store) GetDelivery() bool {
	if m != nil {
		return m.Delivery
	}
	return false
}

func (m *Store) GetOnlineOrdering() bool {
	if m != nil {
		return m.OnlineOrdering
	}
	return false
}

func (m *Store) GetWingStreet() bool {
	if m != nil {
		return m.WingStreet
	}
	return false
}

func (m *Store) GetItalianBistro() bool {
	if m != nil {
		return m.ItalianBistro
	}
	return false
}

func (m *Store) GetBuffet() bool {
	if m != nil {
		return m.Buffet
	}
	return false
}

func (m *Store) GetBuildingDesign() string {
	if m != nil {
		return m.BuildingDesign
	}
	return ""
}

func (m *Store) GetInteriorSeats() uint64 {
	if m != nil {
		return m.InteriorSeats
	}
	return 0
}

func (m *Store) GetTotalSeats() uint64 {
	if m != nil {
		return m.TotalSeats
	}
	return 0
}

func (m *Store) GetParkingSpaces() uint64 {
	if m != nil {
		return m.ParkingSpaces
	}
	return 0
}

func (m *Store) GetOwnershipType() string {
	if m != nil {
		return m.OwnershipType
	}
	return ""
}

func (m *Store) GetMultibrandConfiguration() string {
	if m != nil {
		return m.MultibrandConfiguration
	}
	return ""
}

func (m *Store) GetEntityId() string {
	if m != nil {
		return m.EntityId
	}
	return ""
}

func (m *Store) GetDistance() float64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *Store) GetOpenForCarryout() bool {
	if m != nil {
		return m.OpenForCarryout
	}
	return false
}

func (m *Store) GetOpenForDelivery() bool {
	if m != nil {
		return m.OpenForDelivery
	}
	return false
}

func (m *Store) GetPromiseTime() *PromiseTime {
	if m != nil {
		return m.PromiseTime
	}
	return nil
}

func (m *Store) GetStoreStatus() string {
	if m != nil {
		return m.StoreStatus
	}
	return ""
}

func (m *Store) GetClosureReason() string {
	if m != nil {
		return m.ClosureReason
	}
	return ""
}

func (m *Store) GetOnlineStatus() string {
	if m != nil {
		return m.OnlineStatus
	}
	return ""
}

func (m *Store) GetDays() []*Day {
	if m != nil {
		return m.Days
	}
	return nil
}

func (m *Store) GetOutOfProducts() *OutOfProducts {
	if m != nil {
		return m.OutOfProducts
	}
	return nil
}

// PromiseTime message is the available promise times for a store.
type PromiseTime struct {
	Delivery          int64 `protobuf:"varint,1,opt,name=delivery" json:"delivery,omitempty"`
	CarryOut          int64 `protobuf:"varint,2,opt,name=carryOut" json:"carryOut,omitempty"`
	DeliveryUpdatedAt int64 `protobuf:"varint,3,opt,name=deliveryUpdatedAt" json:"deliveryUpdatedAt,omitempty"`
	CarryOutUpdatedAt int64 `protobuf:"varint,4,opt,name=carryOutUpdatedAt" json:"carryOutUpdatedAt,omitempty"`
}

func (m *PromiseTime) Reset()                    { *m = PromiseTime{} }
func (m *PromiseTime) String() string            { return proto.CompactTextString(m) }
func (*PromiseTime) ProtoMessage()               {}
func (*PromiseTime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *PromiseTime) GetDelivery() int64 {
	if m != nil {
		return m.Delivery
	}
	return 0
}

func (m *PromiseTime) GetCarryOut() int64 {
	if m != nil {
		return m.CarryOut
	}
	return 0
}

func (m *PromiseTime) GetDeliveryUpdatedAt() int64 {
	if m != nil {
		return m.DeliveryUpdatedAt
	}
	return 0
}

func (m *PromiseTime) GetCarryOutUpdatedAt() int64 {
	if m != nil {
		return m.CarryOutUpdatedAt
	}
	return 0
}

type Day struct {
	Date       string       `protobuf:"bytes,1,opt,name=date" json:"date,omitempty"`
	Dow        int64        `protobuf:"varint,2,opt,name=dow" json:"dow,omitempty"`
	Occassions []*Occassion `protobuf:"bytes,3,rep,name=occassions" json:"occassions,omitempty"`
}

func (m *Day) Reset()                    { *m = Day{} }
func (m *Day) String() string            { return proto.CompactTextString(m) }
func (*Day) ProtoMessage()               {}
func (*Day) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Day) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Day) GetDow() int64 {
	if m != nil {
		return m.Dow
	}
	return 0
}

func (m *Day) GetOccassions() []*Occassion {
	if m != nil {
		return m.Occassions
	}
	return nil
}

// Occassion message contains the fields for individual occassion instances.
type Occassion struct {
	Id               string          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name             string          `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type             string          `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Hours            []*Hour         `protobuf:"bytes,4,rep,name=hours" json:"hours,omitempty"`
	PromiseTimeMax   int64           `protobuf:"varint,5,opt,name=promiseTimeMax" json:"promiseTimeMax,omitempty"`
	PromiseTimeMin   int64           `protobuf:"varint,6,opt,name=promiseTimeMin" json:"promiseTimeMin,omitempty"`
	ShowPromiseTime  bool            `protobuf:"varint,7,opt,name=showPromiseTime" json:"showPromiseTime,omitempty"`
	FutureOrders     bool            `protobuf:"varint,8,opt,name=futureOrders" json:"futureOrders,omitempty"`
	FirstOrderOffset int64           `protobuf:"varint,9,opt,name=firstOrderOffset" json:"firstOrderOffset,omitempty"`
	DeliveryZones    []*DeliveryZone `protobuf:"bytes,10,rep,name=deliveryZones" json:"deliveryZones,omitempty"`
	MinOrder         int64           `protobuf:"varint,11,opt,name=minOrder" json:"minOrder,omitempty"`
	MaxOrder         int64           `protobuf:"varint,12,opt,name=maxOrder" json:"maxOrder,omitempty"`
}

func (m *Occassion) Reset()                    { *m = Occassion{} }
func (m *Occassion) String() string            { return proto.CompactTextString(m) }
func (*Occassion) ProtoMessage()               {}
func (*Occassion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Occassion) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Occassion) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Occassion) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Occassion) GetHours() []*Hour {
	if m != nil {
		return m.Hours
	}
	return nil
}

func (m *Occassion) GetPromiseTimeMax() int64 {
	if m != nil {
		return m.PromiseTimeMax
	}
	return 0
}

func (m *Occassion) GetPromiseTimeMin() int64 {
	if m != nil {
		return m.PromiseTimeMin
	}
	return 0
}

func (m *Occassion) GetShowPromiseTime() bool {
	if m != nil {
		return m.ShowPromiseTime
	}
	return false
}

func (m *Occassion) GetFutureOrders() bool {
	if m != nil {
		return m.FutureOrders
	}
	return false
}

func (m *Occassion) GetFirstOrderOffset() int64 {
	if m != nil {
		return m.FirstOrderOffset
	}
	return 0
}

func (m *Occassion) GetDeliveryZones() []*DeliveryZone {
	if m != nil {
		return m.DeliveryZones
	}
	return nil
}

func (m *Occassion) GetMinOrder() int64 {
	if m != nil {
		return m.MinOrder
	}
	return 0
}

func (m *Occassion) GetMaxOrder() int64 {
	if m != nil {
		return m.MaxOrder
	}
	return 0
}

type Hour struct {
	StartTime string `protobuf:"bytes,1,opt,name=startTime" json:"startTime,omitempty"`
	EndTime   string `protobuf:"bytes,2,opt,name=endTime" json:"endTime,omitempty"`
}

func (m *Hour) Reset()                    { *m = Hour{} }
func (m *Hour) String() string            { return proto.CompactTextString(m) }
func (*Hour) ProtoMessage()               {}
func (*Hour) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Hour) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *Hour) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

type DeliveryZone struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *DeliveryZone) Reset()                    { *m = DeliveryZone{} }
func (m *DeliveryZone) String() string            { return proto.CompactTextString(m) }
func (*DeliveryZone) ProtoMessage()               {}
func (*DeliveryZone) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *DeliveryZone) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeliveryZone) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type OutOfProduct struct {
	Class  string `protobuf:"bytes,1,opt,name=class" json:"class,omitempty"`
	Base   string `protobuf:"bytes,2,opt,name=base" json:"base,omitempty"`
	Size   string `protobuf:"bytes,3,opt,name=size" json:"size,omitempty"`
	Status string `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *OutOfProduct) Reset()                    { *m = OutOfProduct{} }
func (m *OutOfProduct) String() string            { return proto.CompactTextString(m) }
func (*OutOfProduct) ProtoMessage()               {}
func (*OutOfProduct) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *OutOfProduct) GetClass() string {
	if m != nil {
		return m.Class
	}
	return ""
}

func (m *OutOfProduct) GetBase() string {
	if m != nil {
		return m.Base
	}
	return ""
}

func (m *OutOfProduct) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

func (m *OutOfProduct) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type OutOfProducts struct {
	Channel  string          `protobuf:"bytes,1,opt,name=channel" json:"channel,omitempty"`
	PosType  string          `protobuf:"bytes,2,opt,name=posType" json:"posType,omitempty"`
	Products []*OutOfProduct `protobuf:"bytes,3,rep,name=products" json:"products,omitempty"`
}

func (m *OutOfProducts) Reset()                    { *m = OutOfProducts{} }
func (m *OutOfProducts) String() string            { return proto.CompactTextString(m) }
func (*OutOfProducts) ProtoMessage()               {}
func (*OutOfProducts) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *OutOfProducts) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *OutOfProducts) GetPosType() string {
	if m != nil {
		return m.PosType
	}
	return ""
}

func (m *OutOfProducts) GetProducts() []*OutOfProduct {
	if m != nil {
		return m.Products
	}
	return nil
}

type UpdatePromiseTimeReq struct {
	StoreNumber string      `protobuf:"bytes,1,opt,name=storeNumber" json:"storeNumber,omitempty"`
	Type        ReceiveType `protobuf:"varint,2,opt,name=type,enum=ReceiveType" json:"type,omitempty"`
	Value       int64       `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	Epoch       int64       `protobuf:"varint,4,opt,name=epoch" json:"epoch,omitempty"`
}

func (m *UpdatePromiseTimeReq) Reset()                    { *m = UpdatePromiseTimeReq{} }
func (m *UpdatePromiseTimeReq) String() string            { return proto.CompactTextString(m) }
func (*UpdatePromiseTimeReq) ProtoMessage()               {}
func (*UpdatePromiseTimeReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *UpdatePromiseTimeReq) GetStoreNumber() string {
	if m != nil {
		return m.StoreNumber
	}
	return ""
}

func (m *UpdatePromiseTimeReq) GetType() ReceiveType {
	if m != nil {
		return m.Type
	}
	return ReceiveType_Carryout
}

func (m *UpdatePromiseTimeReq) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *UpdatePromiseTimeReq) GetEpoch() int64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

type UpdatePromiseTimeRes struct {
	Status      int64  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *UpdatePromiseTimeRes) Reset()                    { *m = UpdatePromiseTimeRes{} }
func (m *UpdatePromiseTimeRes) String() string            { return proto.CompactTextString(m) }
func (*UpdatePromiseTimeRes) ProtoMessage()               {}
func (*UpdatePromiseTimeRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *UpdatePromiseTimeRes) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *UpdatePromiseTimeRes) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type UpdateOutOfProductsReq struct {
	StoreNumber string          `protobuf:"bytes,1,opt,name=storeNumber" json:"storeNumber,omitempty"`
	Channel     string          `protobuf:"bytes,2,opt,name=channel" json:"channel,omitempty"`
	PosType     string          `protobuf:"bytes,3,opt,name=posType" json:"posType,omitempty"`
	Products    []*OutOfProduct `protobuf:"bytes,4,rep,name=products" json:"products,omitempty"`
}

func (m *UpdateOutOfProductsReq) Reset()                    { *m = UpdateOutOfProductsReq{} }
func (m *UpdateOutOfProductsReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateOutOfProductsReq) ProtoMessage()               {}
func (*UpdateOutOfProductsReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *UpdateOutOfProductsReq) GetStoreNumber() string {
	if m != nil {
		return m.StoreNumber
	}
	return ""
}

func (m *UpdateOutOfProductsReq) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *UpdateOutOfProductsReq) GetPosType() string {
	if m != nil {
		return m.PosType
	}
	return ""
}

func (m *UpdateOutOfProductsReq) GetProducts() []*OutOfProduct {
	if m != nil {
		return m.Products
	}
	return nil
}

type UpdateOutOfProductsRes struct {
	Status      int64  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *UpdateOutOfProductsRes) Reset()                    { *m = UpdateOutOfProductsRes{} }
func (m *UpdateOutOfProductsRes) String() string            { return proto.CompactTextString(m) }
func (*UpdateOutOfProductsRes) ProtoMessage()               {}
func (*UpdateOutOfProductsRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *UpdateOutOfProductsRes) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *UpdateOutOfProductsRes) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type UpdateClosureReq struct {
	StoreNumber             string `protobuf:"bytes,1,opt,name=storeNumber" json:"storeNumber,omitempty"`
	Channel                 string `protobuf:"bytes,2,opt,name=channel" json:"channel,omitempty"`
	PosType                 string `protobuf:"bytes,3,opt,name=posType" json:"posType,omitempty"`
	RestaurantChannel       string `protobuf:"bytes,4,opt,name=restaurantChannel" json:"restaurantChannel,omitempty"`
	ServiceOccasion         string `protobuf:"bytes,5,opt,name=serviceOccasion" json:"serviceOccasion,omitempty"`
	RestaurantChannelStatus string `protobuf:"bytes,6,opt,name=restaurantChannelStatus" json:"restaurantChannelStatus,omitempty"`
}

func (m *UpdateClosureReq) Reset()                    { *m = UpdateClosureReq{} }
func (m *UpdateClosureReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateClosureReq) ProtoMessage()               {}
func (*UpdateClosureReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *UpdateClosureReq) GetStoreNumber() string {
	if m != nil {
		return m.StoreNumber
	}
	return ""
}

func (m *UpdateClosureReq) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *UpdateClosureReq) GetPosType() string {
	if m != nil {
		return m.PosType
	}
	return ""
}

func (m *UpdateClosureReq) GetRestaurantChannel() string {
	if m != nil {
		return m.RestaurantChannel
	}
	return ""
}

func (m *UpdateClosureReq) GetServiceOccasion() string {
	if m != nil {
		return m.ServiceOccasion
	}
	return ""
}

func (m *UpdateClosureReq) GetRestaurantChannelStatus() string {
	if m != nil {
		return m.RestaurantChannelStatus
	}
	return ""
}

type UpdateClosureRes struct {
	Status      int64  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *UpdateClosureRes) Reset()                    { *m = UpdateClosureRes{} }
func (m *UpdateClosureRes) String() string            { return proto.CompactTextString(m) }
func (*UpdateClosureRes) ProtoMessage()               {}
func (*UpdateClosureRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *UpdateClosureRes) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *UpdateClosureRes) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// SimpleStore message is the structure of store data that will be returned
// for GetStores.  This is a custom message because we want to keep it limited
// since it will be for all stores.
type SimpleStore struct {
	StoreNumber string `protobuf:"bytes,1,opt,name=storeNumber" json:"storeNumber,omitempty"`
	CarryOut    bool   `protobuf:"varint,2,opt,name=carryOut" json:"carryOut,omitempty"`
	Delivery    bool   `protobuf:"varint,3,opt,name=delivery" json:"delivery,omitempty"`
}

func (m *SimpleStore) Reset()                    { *m = SimpleStore{} }
func (m *SimpleStore) String() string            { return proto.CompactTextString(m) }
func (*SimpleStore) ProtoMessage()               {}
func (*SimpleStore) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *SimpleStore) GetStoreNumber() string {
	if m != nil {
		return m.StoreNumber
	}
	return ""
}

func (m *SimpleStore) GetCarryOut() bool {
	if m != nil {
		return m.CarryOut
	}
	return false
}

func (m *SimpleStore) GetDelivery() bool {
	if m != nil {
		return m.Delivery
	}
	return false
}

func init() {
	proto.RegisterType((*GetStoreByNumberReq)(nil), "GetStoreByNumberReq")
	proto.RegisterType((*GetStoreByNumberRes)(nil), "GetStoreByNumberRes")
	proto.RegisterType((*GetStoresNearReq)(nil), "GetStoresNearReq")
	proto.RegisterType((*GetStoresNearRes)(nil), "GetStoresNearRes")
	proto.RegisterType((*GetStoresReq)(nil), "GetStoresReq")
	proto.RegisterType((*GetStoresRes)(nil), "GetStoresRes")
	proto.RegisterType((*Store)(nil), "Store")
	proto.RegisterType((*PromiseTime)(nil), "PromiseTime")
	proto.RegisterType((*Day)(nil), "Day")
	proto.RegisterType((*Occassion)(nil), "Occassion")
	proto.RegisterType((*Hour)(nil), "Hour")
	proto.RegisterType((*DeliveryZone)(nil), "DeliveryZone")
	proto.RegisterType((*OutOfProduct)(nil), "OutOfProduct")
	proto.RegisterType((*OutOfProducts)(nil), "OutOfProducts")
	proto.RegisterType((*UpdatePromiseTimeReq)(nil), "UpdatePromiseTimeReq")
	proto.RegisterType((*UpdatePromiseTimeRes)(nil), "UpdatePromiseTimeRes")
	proto.RegisterType((*UpdateOutOfProductsReq)(nil), "UpdateOutOfProductsReq")
	proto.RegisterType((*UpdateOutOfProductsRes)(nil), "UpdateOutOfProductsRes")
	proto.RegisterType((*UpdateClosureReq)(nil), "UpdateClosureReq")
	proto.RegisterType((*UpdateClosureRes)(nil), "UpdateClosureRes")
	proto.RegisterType((*SimpleStore)(nil), "SimpleStore")
	proto.RegisterEnum("ReceiveType", ReceiveType_name, ReceiveType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for StoreData service

type StoreDataClient interface {
	GetStoreByNumber(ctx context.Context, in *GetStoreByNumberReq, opts ...grpc.CallOption) (*GetStoreByNumberRes, error)
	GetStoresNear(ctx context.Context, in *GetStoresNearReq, opts ...grpc.CallOption) (*GetStoresNearRes, error)
	GetStores(ctx context.Context, in *GetStoresReq, opts ...grpc.CallOption) (*GetStoresRes, error)
	UpdatePromiseTime(ctx context.Context, in *UpdatePromiseTimeReq, opts ...grpc.CallOption) (*UpdatePromiseTimeRes, error)
	UpdateOutOfProducts(ctx context.Context, in *UpdateOutOfProductsReq, opts ...grpc.CallOption) (*UpdateOutOfProductsRes, error)
	UpdateClosure(ctx context.Context, in *UpdateClosureReq, opts ...grpc.CallOption) (*UpdateClosureRes, error)
}

type storeDataClient struct {
	cc *grpc.ClientConn
}

func NewStoreDataClient(cc *grpc.ClientConn) StoreDataClient {
	return &storeDataClient{cc}
}

func (c *storeDataClient) GetStoreByNumber(ctx context.Context, in *GetStoreByNumberReq, opts ...grpc.CallOption) (*GetStoreByNumberRes, error) {
	out := new(GetStoreByNumberRes)
	err := grpc.Invoke(ctx, "/StoreData/GetStoreByNumber", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeDataClient) GetStoresNear(ctx context.Context, in *GetStoresNearReq, opts ...grpc.CallOption) (*GetStoresNearRes, error) {
	out := new(GetStoresNearRes)
	err := grpc.Invoke(ctx, "/StoreData/GetStoresNear", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeDataClient) GetStores(ctx context.Context, in *GetStoresReq, opts ...grpc.CallOption) (*GetStoresRes, error) {
	out := new(GetStoresRes)
	err := grpc.Invoke(ctx, "/StoreData/GetStores", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeDataClient) UpdatePromiseTime(ctx context.Context, in *UpdatePromiseTimeReq, opts ...grpc.CallOption) (*UpdatePromiseTimeRes, error) {
	out := new(UpdatePromiseTimeRes)
	err := grpc.Invoke(ctx, "/StoreData/UpdatePromiseTime", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeDataClient) UpdateOutOfProducts(ctx context.Context, in *UpdateOutOfProductsReq, opts ...grpc.CallOption) (*UpdateOutOfProductsRes, error) {
	out := new(UpdateOutOfProductsRes)
	err := grpc.Invoke(ctx, "/StoreData/UpdateOutOfProducts", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeDataClient) UpdateClosure(ctx context.Context, in *UpdateClosureReq, opts ...grpc.CallOption) (*UpdateClosureRes, error) {
	out := new(UpdateClosureRes)
	err := grpc.Invoke(ctx, "/StoreData/UpdateClosure", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for StoreData service

type StoreDataServer interface {
	GetStoreByNumber(context.Context, *GetStoreByNumberReq) (*GetStoreByNumberRes, error)
	GetStoresNear(context.Context, *GetStoresNearReq) (*GetStoresNearRes, error)
	GetStores(context.Context, *GetStoresReq) (*GetStoresRes, error)
	UpdatePromiseTime(context.Context, *UpdatePromiseTimeReq) (*UpdatePromiseTimeRes, error)
	UpdateOutOfProducts(context.Context, *UpdateOutOfProductsReq) (*UpdateOutOfProductsRes, error)
	UpdateClosure(context.Context, *UpdateClosureReq) (*UpdateClosureRes, error)
}

func RegisterStoreDataServer(s *grpc.Server, srv StoreDataServer) {
	s.RegisterService(&_StoreData_serviceDesc, srv)
}

func _StoreData_GetStoreByNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStoreByNumberReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreDataServer).GetStoreByNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StoreData/GetStoreByNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreDataServer).GetStoreByNumber(ctx, req.(*GetStoreByNumberReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreData_GetStoresNear_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStoresNearReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreDataServer).GetStoresNear(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StoreData/GetStoresNear",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreDataServer).GetStoresNear(ctx, req.(*GetStoresNearReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreData_GetStores_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStoresReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreDataServer).GetStores(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StoreData/GetStores",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreDataServer).GetStores(ctx, req.(*GetStoresReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreData_UpdatePromiseTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePromiseTimeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreDataServer).UpdatePromiseTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StoreData/UpdatePromiseTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreDataServer).UpdatePromiseTime(ctx, req.(*UpdatePromiseTimeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreData_UpdateOutOfProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOutOfProductsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreDataServer).UpdateOutOfProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StoreData/UpdateOutOfProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreDataServer).UpdateOutOfProducts(ctx, req.(*UpdateOutOfProductsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreData_UpdateClosure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateClosureReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreDataServer).UpdateClosure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StoreData/UpdateClosure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreDataServer).UpdateClosure(ctx, req.(*UpdateClosureReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _StoreData_serviceDesc = grpc.ServiceDesc{
	ServiceName: "StoreData",
	HandlerType: (*StoreDataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStoreByNumber",
			Handler:    _StoreData_GetStoreByNumber_Handler,
		},
		{
			MethodName: "GetStoresNear",
			Handler:    _StoreData_GetStoresNear_Handler,
		},
		{
			MethodName: "GetStores",
			Handler:    _StoreData_GetStores_Handler,
		},
		{
			MethodName: "UpdatePromiseTime",
			Handler:    _StoreData_UpdatePromiseTime_Handler,
		},
		{
			MethodName: "UpdateOutOfProducts",
			Handler:    _StoreData_UpdateOutOfProducts_Handler,
		},
		{
			MethodName: "UpdateClosure",
			Handler:    _StoreData_UpdateClosure_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "storedata.proto",
}

func init() { proto.RegisterFile("storedata.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1483 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0x5f, 0x6f, 0xdb, 0xba,
	0x15, 0xaf, 0x2d, 0x3b, 0x4d, 0x18, 0x3b, 0x4d, 0xd8, 0xb4, 0xe5, 0xdc, 0xac, 0xf3, 0xb4, 0xae,
	0x4b, 0xb3, 0x42, 0x0f, 0xc9, 0x80, 0xee, 0x69, 0xd8, 0x9a, 0x60, 0x5b, 0x81, 0xae, 0x09, 0x94,
	0x0e, 0x03, 0xf6, 0xc6, 0x48, 0xb4, 0x4d, 0x4c, 0x26, 0x55, 0x92, 0x4a, 0xea, 0x62, 0xcf, 0xfb,
	0x0a, 0xc3, 0x1e, 0xf7, 0x31, 0x37, 0xdc, 0x87, 0x8b, 0x73, 0x28, 0xd9, 0x92, 0xed, 0xf4, 0x06,
	0x08, 0xee, 0x9b, 0xce, 0xef, 0x1c, 0x92, 0xe7, 0xff, 0x21, 0x45, 0x1e, 0x59, 0xa7, 0x8d, 0x48,
	0xb9, 0xe3, 0x51, 0x6e, 0xb4, 0xd3, 0xe1, 0x5b, 0xf2, 0xf8, 0x4f, 0xc2, 0x5d, 0x02, 0xfa, 0x6e,
	0xf6, 0xb1, 0x98, 0x5e, 0x09, 0x13, 0x8b, 0xcf, 0x74, 0x48, 0xb6, 0x51, 0xd2, 0x23, 0xac, 0x35,
	0x6c, 0x1d, 0x6e, 0xc5, 0x75, 0x28, 0x9c, 0xae, 0x5b, 0x68, 0xe9, 0x53, 0xb2, 0x61, 0x1d, 0x77,
	0x85, 0xc5, 0x35, 0x41, 0x5c, 0x52, 0xb0, 0x61, 0x2a, 0x6c, 0x62, 0x64, 0xee, 0xa4, 0x56, 0xac,
	0xed, 0x37, 0xac, 0x41, 0xf4, 0x80, 0x74, 0x71, 0x7f, 0x16, 0x0c, 0x5b, 0x87, 0xdb, 0xc7, 0x1b,
	0x11, 0xee, 0x1d, 0x7b, 0x30, 0xfc, 0x27, 0xd9, 0xad, 0x8e, 0xb3, 0x1f, 0x05, 0x47, 0x25, 0x07,
	0x64, 0x33, 0xe3, 0x4e, 0xba, 0x22, 0x15, 0x78, 0x5a, 0x2b, 0x9e, 0xd3, 0xf4, 0x80, 0x6c, 0x65,
	0x5a, 0x8d, 0x3d, 0xb3, 0x8d, 0xcc, 0x05, 0x40, 0xf7, 0x49, 0xd7, 0x70, 0x35, 0xf6, 0x67, 0xf5,
	0x63, 0x4f, 0x50, 0x46, 0x1e, 0x7e, 0x95, 0x79, 0xa2, 0x53, 0xc1, 0x3a, 0xa8, 0x5f, 0x45, 0x86,
	0xd9, 0xca, 0xe9, 0xf7, 0xb1, 0xf4, 0x05, 0xac, 0x84, 0xad, 0x58, 0x30, 0x0c, 0x6a, 0xa6, 0x96,
	0x68, 0xb8, 0x43, 0x7a, 0xf3, 0xd3, 0x62, 0xf1, 0x39, 0x54, 0x0d, 0xfa, 0x3e, 0x27, 0xbf, 0x5c,
	0x3a, 0xb9, 0x17, 0x5d, 0xca, 0x69, 0x9e, 0x89, 0xe6, 0xf9, 0xff, 0x23, 0xa4, 0x8b, 0xc8, 0x0f,
	0xa7, 0x41, 0x23, 0x06, 0xed, 0x6f, 0xc5, 0x20, 0x58, 0x8e, 0xc1, 0x01, 0xd9, 0xba, 0x32, 0x5c,
	0xa5, 0x1f, 0xf9, 0xb4, 0xf2, 0xf7, 0x02, 0xa0, 0xbb, 0x24, 0xc8, 0x27, 0x92, 0x75, 0x87, 0xad,
	0xc3, 0xcd, 0x18, 0x3e, 0x41, 0x17, 0x9e, 0xa6, 0x46, 0x58, 0xfb, 0x41, 0x2a, 0xc1, 0x36, 0xbc,
	0x2e, 0x35, 0x88, 0x86, 0xa4, 0x57, 0x23, 0x8f, 0xd9, 0x43, 0x14, 0x69, 0x60, 0x4b, 0x32, 0x27,
	0x6c, 0x73, 0x45, 0xe6, 0x84, 0x52, 0xd2, 0x49, 0xa4, 0x9b, 0xb1, 0x2d, 0xe4, 0xe1, 0x37, 0xf8,
	0x3c, 0xd1, 0x85, 0x72, 0x33, 0x46, 0x10, 0x2d, 0x29, 0xc8, 0x24, 0xf0, 0xbe, 0x60, 0xdb, 0x08,
	0x7b, 0x82, 0xbe, 0x20, 0x24, 0xd7, 0xd6, 0xf1, 0xec, 0x14, 0x92, 0xa9, 0x87, 0xac, 0x1a, 0x42,
	0x5f, 0x92, 0x3e, 0xae, 0x37, 0xb3, 0x58, 0x8c, 0x21, 0x56, 0x7d, 0x14, 0x69, 0x82, 0x20, 0x75,
	0x55, 0x58, 0xa9, 0x84, 0xb5, 0x17, 0x13, 0xad, 0x04, 0xdb, 0xf1, 0x52, 0x0d, 0x10, 0xfc, 0x38,
	0xd1, 0x53, 0xe1, 0x25, 0x1e, 0x79, 0x3f, 0xce, 0x01, 0x88, 0xcf, 0x88, 0x7f, 0xf1, 0xcc, 0x5d,
	0x64, 0xce, 0x69, 0x58, 0x99, 0x88, 0x2c, 0xf3, 0xcc, 0x3d, 0xbf, 0x72, 0x0e, 0x80, 0x65, 0x39,
	0x1f, 0x0b, 0xc3, 0xa8, 0xb7, 0x0c, 0x09, 0x58, 0x93, 0x1a, 0x79, 0x2d, 0x3e, 0x4d, 0x4c, 0xc1,
	0x1e, 0x63, 0x74, 0x16, 0x00, 0x78, 0x29, 0x95, 0x4a, 0xbc, 0x57, 0x6c, 0x1f, 0x59, 0x25, 0x05,
	0x5a, 0x24, 0xdc, 0x98, 0xd9, 0x79, 0xe1, 0xd8, 0x13, 0xe4, 0xcc, 0x69, 0xe0, 0xa5, 0x22, 0x93,
	0xd7, 0xc2, 0xcc, 0xd8, 0x53, 0xcf, 0xab, 0x68, 0xfa, 0x8a, 0xec, 0x68, 0x95, 0x49, 0x25, 0xce,
	0x4d, 0x2a, 0x8c, 0x54, 0x63, 0xf6, 0x0c, 0x25, 0x96, 0x50, 0xf0, 0xf7, 0x8d, 0x54, 0xe3, 0x4b,
	0x67, 0x84, 0x70, 0x8c, 0xa1, 0x4c, 0x0d, 0x01, 0x4f, 0x4a, 0xc7, 0x33, 0xc9, 0xd5, 0x3b, 0x69,
	0x9d, 0xd1, 0xec, 0x27, 0x28, 0xd2, 0x04, 0x41, 0xfb, 0xab, 0x62, 0x34, 0x12, 0x8e, 0x0d, 0xbc,
	0xf6, 0x9e, 0x02, 0x2d, 0xae, 0x0a, 0x99, 0xa5, 0x52, 0x8d, 0xcf, 0x84, 0x95, 0x63, 0xc5, 0x9e,
	0xa3, 0x4b, 0x96, 0x50, 0x3c, 0x45, 0x39, 0x61, 0xa4, 0x36, 0x97, 0x82, 0x3b, 0xcb, 0x0e, 0x86,
	0xad, 0xc3, 0x4e, 0xdc, 0x04, 0x41, 0x57, 0xa7, 0x1d, 0xcf, 0xbc, 0xc8, 0x4f, 0x51, 0xa4, 0x86,
	0xc0, 0x2e, 0x39, 0x37, 0xff, 0x00, 0xe5, 0x73, 0x9e, 0x08, 0xcb, 0x5e, 0xf8, 0x5d, 0x1a, 0x20,
	0x48, 0xe9, 0x1b, 0x25, 0x8c, 0x9d, 0xc8, 0xfc, 0xd3, 0x2c, 0x17, 0xec, 0x67, 0x3e, 0x37, 0x1a,
	0x20, 0xfd, 0x2d, 0x79, 0x36, 0x2d, 0x32, 0x27, 0xb1, 0xae, 0x4e, 0xb5, 0x1a, 0xc9, 0x71, 0x61,
	0x38, 0x76, 0x87, 0x21, 0xca, 0xdf, 0xc6, 0x86, 0xa8, 0x08, 0xe5, 0xa4, 0x9b, 0xbd, 0x4f, 0xd9,
	0xcf, 0x7d, 0xde, 0x54, 0x34, 0x46, 0x4c, 0x5a, 0xc7, 0x55, 0x22, 0x58, 0xe8, 0x6b, 0xbe, 0xa2,
	0xe9, 0x21, 0x79, 0xa4, 0x73, 0xa1, 0xfe, 0xa8, 0xcd, 0x29, 0x04, 0x58, 0x17, 0x8e, 0xfd, 0x02,
	0x9d, 0xb9, 0x0c, 0xd7, 0x24, 0xcf, 0xaa, 0xf0, 0xbf, 0x6c, 0x48, 0x56, 0x30, 0x8d, 0xc8, 0x76,
	0x6e, 0xf4, 0x54, 0x5a, 0xf1, 0x49, 0x4e, 0x05, 0xfb, 0x25, 0xce, 0x87, 0x5e, 0x74, 0xb1, 0xc0,
	0xe2, 0xba, 0xc0, 0xbc, 0x6b, 0x5d, 0xfa, 0x26, 0xf9, 0xaa, 0xd6, 0xb5, 0x3c, 0x84, 0xf5, 0x97,
	0x69, 0x5b, 0x18, 0x11, 0x0b, 0x6e, 0xb5, 0x62, 0xbf, 0x2a, 0xeb, 0xaf, 0x0e, 0x42, 0xaf, 0xf0,
	0x79, 0x56, 0x6e, 0x74, 0xe8, 0x7b, 0x45, 0x1d, 0xa3, 0x8c, 0x74, 0x52, 0x3e, 0xb3, 0xec, 0x35,
	0xf6, 0xd3, 0x4e, 0x74, 0xc6, 0x67, 0x31, 0x22, 0xf4, 0x37, 0xa4, 0xaf, 0x0b, 0x77, 0x3e, 0xba,
	0x30, 0x3a, 0x2d, 0x12, 0x67, 0xd9, 0x11, 0xea, 0xbd, 0x13, 0x9d, 0xd7, 0xd1, 0xb8, 0x29, 0x14,
	0xfe, 0xb7, 0x45, 0xb6, 0x6b, 0x86, 0x35, 0xaa, 0xc3, 0x77, 0xfb, 0x45, 0x75, 0xd4, 0xab, 0xaa,
	0xed, 0x79, 0xf3, 0xaa, 0x7a, 0x43, 0xf6, 0x2a, 0xb9, 0xbf, 0xe6, 0x29, 0x77, 0x22, 0xfd, 0x83,
	0xc3, 0x1e, 0x1c, 0xc4, 0xab, 0x0c, 0x90, 0xae, 0x56, 0x2e, 0xa4, 0x3b, 0x5e, 0x7a, 0x85, 0x11,
	0xfe, 0x8d, 0x04, 0x67, 0x7c, 0x06, 0x6d, 0x12, 0x90, 0x72, 0x2a, 0xe0, 0x37, 0xb4, 0xed, 0x54,
	0xdf, 0x94, 0xda, 0xc0, 0x27, 0x3d, 0x22, 0x44, 0x27, 0x09, 0xb7, 0x56, 0x6a, 0x55, 0x8d, 0x1d,
	0x12, 0x9d, 0x57, 0x50, 0x5c, 0xe3, 0x86, 0xff, 0x0e, 0xc8, 0xd6, 0x9c, 0x43, 0x77, 0x48, 0x5b,
	0xa6, 0xe5, 0xee, 0x6d, 0x99, 0xc2, 0x79, 0x0a, 0x66, 0x85, 0x9f, 0x6b, 0xf8, 0x0d, 0x98, 0x83,
	0xec, 0x0f, 0x3c, 0x06, 0xdf, 0xf4, 0x39, 0xe9, 0x4e, 0x74, 0x61, 0x2c, 0xeb, 0xe0, 0x61, 0xdd,
	0xe8, 0xcf, 0xba, 0x30, 0xb1, 0xc7, 0xa0, 0x96, 0x6b, 0xa9, 0xf2, 0x17, 0xfe, 0x05, 0x47, 0x4c,
	0x10, 0x2f, 0xa1, 0xcb, 0x72, 0x52, 0xe1, 0xc0, 0x59, 0x92, 0x93, 0x0a, 0xb2, 0xd8, 0x4e, 0xf4,
	0x4d, 0x2d, 0x64, 0x38, 0x76, 0x36, 0xe3, 0x65, 0x18, 0xb2, 0x69, 0x54, 0xb8, 0xc2, 0xf8, 0xae,
	0x65, 0x71, 0xf2, 0x6c, 0xc6, 0x0d, 0x8c, 0x1e, 0x91, 0xdd, 0x91, 0x34, 0xd6, 0x21, 0x79, 0x3e,
	0x1a, 0x59, 0xe1, 0x70, 0x0a, 0x05, 0xf1, 0x0a, 0x4e, 0x4f, 0x48, 0xbf, 0x0a, 0xe4, 0xdf, 0xb5,
	0x12, 0x96, 0x11, 0x34, 0xb7, 0x1f, 0x9d, 0xd5, 0xd0, 0xb8, 0x29, 0x03, 0x29, 0x33, 0x95, 0x0a,
	0xb7, 0xc1, 0x89, 0x15, 0xc4, 0x73, 0x1a, 0x79, 0xfc, 0x8b, 0xe7, 0xf5, 0x4a, 0x5e, 0x49, 0x87,
	0xbf, 0x23, 0x1d, 0xf0, 0x22, 0xb4, 0x7f, 0xeb, 0xb8, 0x71, 0x68, 0xa8, 0x0f, 0xcd, 0x02, 0x80,
	0x0b, 0x94, 0x50, 0x29, 0xf2, 0x7c, 0x90, 0x2a, 0x32, 0x3c, 0x26, 0xbd, 0xba, 0x5a, 0x77, 0x89,
	0x6d, 0x98, 0x92, 0x5e, 0xbd, 0x54, 0x60, 0x20, 0x25, 0x19, 0xb7, 0xb6, 0x5c, 0xe6, 0x09, 0x58,
	0x79, 0xc5, 0xed, 0x7c, 0x25, 0x7c, 0x03, 0x66, 0xe5, 0xd7, 0x79, 0x56, 0xc0, 0x77, 0xed, 0xd2,
	0xe4, 0xef, 0x1a, 0x25, 0x15, 0x2a, 0xd2, 0x6f, 0x14, 0x24, 0x18, 0x91, 0x4c, 0xb8, 0x52, 0x22,
	0x2b, 0x0f, 0xaa, 0x48, 0xe0, 0xe4, 0xda, 0x62, 0xb7, 0x2d, 0xcd, 0x2b, 0x49, 0xfa, 0x9a, 0x6c,
	0xe6, 0x55, 0x99, 0x07, 0x65, 0x18, 0xea, 0xbb, 0xc6, 0x73, 0x76, 0xf8, 0xaf, 0x16, 0xd9, 0xf7,
	0xa5, 0x54, 0xef, 0x5f, 0x77, 0xb9, 0x72, 0xd3, 0x61, 0x99, 0xec, 0x70, 0xf8, 0xce, 0x71, 0x2f,
	0x8a, 0x45, 0x22, 0x60, 0xf2, 0xce, 0x72, 0x51, 0xa6, 0xfe, 0x3e, 0xe9, 0x5e, 0xf3, 0xac, 0x10,
	0x65, 0xa5, 0x7b, 0x02, 0x50, 0x91, 0xeb, 0x64, 0x52, 0x56, 0xb4, 0x27, 0xc2, 0x8b, 0xb5, 0x7a,
	0xdc, 0xe3, 0x76, 0x19, 0xfe, 0xa7, 0x45, 0x9e, 0xfa, 0x2d, 0x9b, 0x2d, 0xee, 0x4e, 0xc6, 0xd5,
	0xdc, 0xde, 0xbe, 0xd5, 0xed, 0xc1, 0xed, 0x6e, 0xef, 0x7c, 0xdb, 0xed, 0xf1, 0x2d, 0xaa, 0xdd,
	0xc7, 0xde, 0xff, 0xb7, 0xc8, 0xae, 0xdf, 0xf4, 0xb4, 0x9a, 0x1b, 0x3f, 0x96, 0xa5, 0x6f, 0xc8,
	0x9e, 0x11, 0xd6, 0xf1, 0xc2, 0x70, 0xe5, 0x4e, 0xcb, 0xd5, 0x3e, 0x91, 0x57, 0x19, 0xd8, 0x94,
	0x84, 0xb9, 0x96, 0x89, 0xc0, 0x6e, 0x0a, 0xea, 0x77, 0x51, 0x76, 0x19, 0x86, 0x0b, 0xc2, 0xca,
	0xf2, 0x72, 0xda, 0xf9, 0x0b, 0xf6, 0x6d, 0xec, 0xf0, 0xc3, 0x8a, 0xed, 0xf7, 0x71, 0xe5, 0x98,
	0x6c, 0xd7, 0x5e, 0x22, 0x77, 0x7b, 0x77, 0x34, 0x66, 0xdf, 0x6d, 0x37, 0xca, 0xa0, 0x79, 0xa3,
	0x3c, 0x7a, 0x4d, 0xb6, 0x6b, 0x65, 0x43, 0x7b, 0x64, 0xb3, 0xba, 0x90, 0xec, 0x3e, 0x00, 0xaa,
	0xea, 0x52, 0xbb, 0xad, 0xe3, 0xef, 0xda, 0x64, 0x0b, 0xd5, 0x39, 0xe3, 0x8e, 0xd3, 0xdf, 0x2f,
	0x9e, 0x80, 0xd5, 0x7b, 0x97, 0xee, 0x47, 0x6b, 0xde, 0xce, 0x83, 0x75, 0xa8, 0x0d, 0x1f, 0xd0,
	0xb7, 0xa4, 0xdf, 0x78, 0x44, 0xd2, 0xbd, 0x68, 0xf9, 0x49, 0x3b, 0x58, 0x81, 0x60, 0xe1, 0xaf,
	0xc9, 0xd6, 0x1c, 0xa5, 0xfd, 0xa8, 0xfe, 0x36, 0x1c, 0x34, 0x48, 0x10, 0x3e, 0x25, 0x7b, 0x2b,
	0x65, 0x4d, 0x9f, 0x44, 0xeb, 0x5a, 0xce, 0x60, 0x2d, 0x0c, 0x9b, 0xbc, 0x27, 0x8f, 0xd7, 0x54,
	0x0b, 0x7d, 0x16, 0xad, 0x2f, 0xef, 0xc1, 0x2d, 0x8c, 0xd2, 0xea, 0x46, 0x9e, 0xd0, 0xbd, 0x68,
	0xb9, 0x66, 0x06, 0x2b, 0x90, 0x0d, 0x1f, 0x5c, 0x6d, 0xe0, 0x0f, 0x8a, 0x93, 0xef, 0x03, 0x00,
	0x00, 0xff, 0xff, 0x30, 0x8c, 0x59, 0xff, 0xb3, 0x10, 0x00, 0x00,
}
